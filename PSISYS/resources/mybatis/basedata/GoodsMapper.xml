<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GoodsMapper">
	
	<!--表名 -->
	<sql id="tableName">
		base_good
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		GOOD_ID,
		PK_SOBOOKS,
		USER_ID,
		GOODTYPE_ID,
		GOODCODE,
		GOODNAME,
		WAREHOUSE_IDs,
		BARCODE,
		SIMPLENAME,
		SUBGZ_ID,
		GOODSPECIF,
		CUNIT_ID,
		GOODTYPECODE,
		FZUNIT_ID,
		YICODE,
		UNITPROP,
		SUPPLIER_ID,
		NOTE,
		LASTPPRICE,
		CPRICE,
		RPRICE,
		LFZUPPRICE,
		FZUCPRICE,
		MPRICE,
		STOCKNUM,
		STOCKUPNUM,
		STOCKDOWNNUM
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{GOOD_ID},	
		#{PK_SOBOOKS},	
		#{USER_ID},	
		#{GOODTYPE_ID},	
		#{GOODCODE},	
		#{GOODNAME},
		#{WAREHOUSE_IDs},	
		#{BARCODE},	
		#{SIMPLENAME},	
		#{SUBGZ_ID},	
		#{GOODSPECIF},	
		#{CUNIT_ID},	
		#{GOODTYPECODE},	
		#{FZUNIT_ID},	
		#{YICODE},	
		#{UNITPROP},	
		#{SUPPLIER_ID},	
		#{NOTE},	
		#{LASTPPRICE},	
		#{CPRICE},	
		#{RPRICE},	
		#{LFZUPPRICE},	
		#{FZUCPRICE},	
		#{MPRICE},	
		#{STOCKNUM},	
		#{STOCKUPNUM},	
		#{STOCKDOWNNUM}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	
		<!--从excel导入数据 新增-->
	<insert id="saveGoods" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		GOOD_ID,GOODCODE,BARCODE,SIMPLENAME,GOODNAME,BRANT,SUBGZ_ID,GOODTYPECODE,GOODSPECIF,STOCKNUM,CUNIT_ID,FZUNIT_ID,
		UNITPROP,LFZUPPRICE,LASTPPRICE,CPRICE,SUPPLIER_ID,RPRICE,MPRICE,FZUCPRICE,PK_SOBOOKS,USER_ID,
		GOODTYPE_ID,STOCKDOWNNUM,YICODE,NOTE,WAREHOUSE_IDs,DEF1
		) values (
			#{GOOD_ID},#{GOODCODE},#{BARCODE},#{SIMPLENAME},#{GOODNAME},#{BRANT},#{SUBGZ_ID},#{GOODTYPECODE},#{GOODSPECIF},#{STOCKNUM},#{CUNIT_ID},#{FZUNIT_ID},
			#{UNITPROP},#{LFZUPPRICE},#{LASTPPRICE},#{CPRICE},
			#{SUPPLIER_ID},#{RPRICE},#{MPRICE},#{FZUCPRICE},#{PK_SOBOOKS},#{USER_ID},#{GOODTYPE_ID},
			#{STOCKDOWNNUM},#{YICODE},#{NOTE},#{WAREHOUSE_IDs},#{DEF1}
		)
	</insert>
	
	
	<!-- 删除-->
	<update id="delete" parameterType="pd">
		update 
		<include refid="tableName"></include>
		set DR = 1
		where 
			GOOD_ID = #{GOOD_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0
	</update>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			GOODTYPE_ID = #{GOODTYPE_ID},	
			GOODCODE = #{GOODCODE},	
			GOODNAME = #{GOODNAME},	
			WAREHOUSE_IDs = #{WAREHOUSE_IDs},
			BARCODE=#{BARCODE},	
			SIMPLENAME=#{SIMPLENAME},	
			SUBGZ_ID=#{SUBGZ_ID},	
			GOODSPECIF=#{GOODSPECIF},	
			CUNIT_ID=#{CUNIT_ID},	
			GOODTYPECODE=#{GOODTYPECODE},	
			FZUNIT_ID=#{FZUNIT_ID},	
			YICODE=#{YICODE},	
			UNITPROP=#{UNITPROP},	
			SUPPLIER_ID=#{SUPPLIER_ID},	
			NOTE=#{NOTE},	
			LASTPPRICE=#{LASTPPRICE},	
			CPRICE=#{CPRICE},	
			RPRICE=#{RPRICE},	
			LFZUPPRICE=#{LFZUPPRICE},	
			FZUCPRICE=#{FZUCPRICE},	
			MPRICE=#{MPRICE},	
			STOCKNUM=#{STOCKNUM},	
			STOCKUPNUM=#{STOCKUPNUM},	
			STOCKDOWNNUM=#{STOCKDOWNNUM}
		where 
			GOOD_ID = #{GOOD_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0
	</update>
	
	<!-- 修改库存和最后进价 -->
	<update id="editStocknumAndLastprice" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			LASTPPRICE=#{LASTPPRICE},	
			STOCKNUM=#{STOCKNUM}
		where 
			GOODCODE = #{GOOD_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0
	</update>
	
	<!-- 修改库存 -->
	<update id="editKuCun" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STOCKNUM = #{STOCKNUM}
		where 
			GOOD_ID = #{GOOD_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			GOOD_ID = #{GOOD_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0
	</select>
	
	<!-- 通过 商品编号 获取数据 -->
	<select id="findByGOODCODE" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			GOODCODE = #{GOOD_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0
	</select>
	
	<!-- 通过ID获取数据(查看详细信息) -->
	<select id="findByIdToCha" parameterType="pd" resultType="pd">
		select
			a.GOOD_ID,
			a.USER_ID,
			a.GOODTYPE_ID,
			a.GOODCODE,
			a.GOODNAME,	
			a.WAREHOUSE_IDs,
			a.BARCODE,	
			a.SIMPLENAME,
			a.BRANT,
			a.SUBGZ_ID,
			a.GOODSPECIF,
			a.CUNIT_ID,
			a.GOODTYPECODE,
			a.FZUNIT_ID,
			a.YICODE,
			a.UNITPROP,
			a.GOODPIC,
			a.SUPPLIER_ID,
			a.NOTE,
			a.LASTPPRICE,
			a.CPRICE,
			a.RPRICE,
			a.LFZUPPRICE,
			a.FZUCPRICE,
			a.MPRICE,
			a.STOCKNUM,
			a.STOCKUPNUM,
			a.STOCKDOWNNUM,		
			
			b.SUPPLIERNAME,
			c.NAME UNITNAME,
			d.NAME FZUNITNAME
		from 
		<include refid="tableName"></include> a
		left join base_supplier b
		on a.SUPPLIER_ID = b.SUPPLIER_ID
		left join cp_spunit c
		on a.CUNIT_ID = c.SPUNIT_ID
		left join cp_spunit d
		on a.FZUNIT_ID = d.SPUNIT_ID
		where 1=1
			and a.PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(a.dr,0)=0 
			and a.GOOD_ID = #{GOOD_ID}
	</select>
	
	<!-- 列表 -->
	<select id="checkGoodsStockDownNum" parameterType="page" resultType="pd">
		select
			GOODNAME,
			GOODCODE,
			STOCKNUM,
			STOCKDOWNNUM	
		from 
		<include refid="tableName"></include>
			where 1=1
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0 
			and STOCKDOWNNUM > STOCKNUM
			order by STOCKDOWNNUM desc 
	</select>
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			a.GOOD_ID,
			a.USER_ID,
			a.GOODTYPE_ID,
			a.GOODCODE,
			a.GOODNAME,	
			a.WAREHOUSE_IDs,
			a.BARCODE,	
			a.SIMPLENAME,
			a.BRANT,
			a.SUBGZ_ID,
			a.GOODSPECIF,
			a.CUNIT_ID,
			a.GOODTYPECODE,
			a.FZUNIT_ID,
			a.YICODE,
			a.UNITPROP,
			a.GOODPIC,
			a.SUPPLIER_ID,
			a.NOTE,
			a.LASTPPRICE,
			a.CPRICE,
			a.RPRICE,
			a.LFZUPPRICE,
			a.FZUCPRICE,
			a.MPRICE,
			a.STOCKNUM,
			a.STOCKUPNUM,
			a.STOCKDOWNNUM,		
			
			b.SUPPLIERNAME,
			c.NAME UNITNAME,
			d.NAME FZUNITNAME
		from 
		<include refid="tableName"></include> a
		left join base_supplier b
		on a.SUPPLIER_ID = b.SUPPLIER_ID
		left join cp_spunit c
		on a.CUNIT_ID = c.SPUNIT_ID
		left join cp_spunit d
		on a.FZUNIT_ID = d.SPUNIT_ID
		<if test="pd.WAREHOUSE_ID!= null and pd.WAREHOUSE_ID != ''">
		left join base_stock e
		on a.GOODCODE = e.GOOD_ID
		</if>
		where 1=1
			and a.PK_SOBOOKS = #{pd.PK_SOBOOKS}
			and IFNULL(a.dr,0)=0 
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					a.GOODNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					a.GOODTYPECODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					a.GOODSPECIF LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					a.SIMPLENAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					a.GOODCODE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		 <if test="pd.GOODTYPE_ID!= null and pd.GOODTYPE_ID != ''">
			and a.GOODTYPE_ID = #{pd.GOODTYPE_ID}
		</if>
		<if test="pd.SUPPLIER_ID!= null and pd.SUPPLIER_ID != ''">
			and a.SUPPLIER_ID = #{pd.SUPPLIER_ID}
		</if>
		<if test="pd.WAREHOUSE_ID!= null and pd.WAREHOUSE_ID != ''">
			and e.WAREHOUSE_ID = #{pd.WAREHOUSE_ID}
		</if>
		<!-- <if test="pd.isKucun!= null and pd.isKucun != ''">
			and a.ZCOUNT != 0
			order by a.ZCOUNT
		</if> -->
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
			a.GOOD_ID,
			a.USER_ID,
			a.GOODTYPE_ID,
			a.GOODCODE,
			a.GOODNAME,	
			a.WAREHOUSE_IDs,
			a.BARCODE,	
			a.SIMPLENAME,
			a.BRANT,
			a.SUBGZ_ID,
			a.GOODSPECIF,
			a.CUNIT_ID,
			a.GOODTYPECODE,
			a.FZUNIT_ID,
			a.YICODE,
			a.UNITPROP,
			a.GOODPIC,
			a.SUPPLIER_ID,
			a.NOTE,
			a.LASTPPRICE,
			a.CPRICE,
			a.RPRICE,
			a.LFZUPPRICE,
			a.FZUCPRICE,
			a.MPRICE,
			a.STOCKNUM,
			a.STOCKUPNUM,
			a.STOCKDOWNNUM,		
			b.SUPPLIERNAME,
			c.NAME UNITNAME,
			d.NAME FZUNITNAME
		from 
		<include refid="tableName"></include> a
		left join base_supplier b
		on a.SUPPLIER_ID = b.SUPPLIER_ID
		left join cp_spunit c
		on a.CUNIT_ID = c.SPUNIT_ID
		left join cp_spunit d
		on a.FZUNIT_ID = d.SPUNIT_ID
		where 1=1
			and a.PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(a.dr,0)=0 
		order by a.STOCKNUM desc
	</select>
	
	
	<select id="listAllDetail" parameterType="pd" resultType="pd">
		select
			a.GOOD_ID,e.NAME,f.TYPENAME,a.GOODCODE,a.GOODNAME,a.GOODTYPE_ID,a.WAREHOUSE_IDs,	a.BARCODE,	a.SIMPLENAME,a.BRANT,a.SUBGZ_ID,a.GOODSPECIF,a.CUNIT_ID,
			a.GOODTYPECODE,	a.FZUNIT_ID,a.YICODE,	a.UNITPROP,	a.GOODPIC,	a.SUPPLIER_ID,	a.NOTE,	a.LASTPPRICE,	a.CPRICE,	a.RPRICE,a.LFZUPPRICE,a.FZUCPRICE,
			a.MPRICE,a.DEF1, a.STOCKNUM,a.STOCKUPNUM,a.STOCKDOWNNUM,	b.SUPPLIERNAME,c.NAME UNITNAME,d.NAME FZUNITNAME,g.ENTERPRISENAME
		from 
		base_good as a
		left join base_supplier b
		on a.SUPPLIER_ID = b.SUPPLIER_ID
		left join cp_spunit c
		on a.CUNIT_ID = c.SPUNIT_ID
		left join cp_spunit d
		on a.FZUNIT_ID = d.SPUNIT_ID
		left join sys_user as e on a.USER_ID=e.USER_ID
		left join base_goodtype as f on a.GOODTYPE_ID=f.GOODTYPE_ID
		left join base_sobooks as g on a.PK_SOBOOKS=g.SOBOOKS_ID
		where 1=1
			and a.PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(a.dr,0)=0 
		order by a.STOCKNUM desc
	</select>
	
	
	<!-- 通过产品编码 -->
	<select id="listByBm" parameterType="pd" resultType="pd">
		select
			a.GOOD_ID,
			a.USER_ID,
			a.GOODTYPE_ID,
			a.GOODCODE,
			a.GOODNAME,	
			a.WAREHOUSE_IDs,
			a.BARCODE,	
			a.SIMPLENAME,
			a.BRANT,
			a.SUBGZ_ID,
			a.GOODSPECIF,
			a.CUNIT_ID,
			a.GOODTYPECODE,
			a.FZUNIT_ID,
			a.YICODE,
			a.UNITPROP,
			a.GOODPIC,
			a.SUPPLIER_ID,
			a.NOTE,
			a.LASTPPRICE,
			a.CPRICE,
			a.RPRICE,
			a.LFZUPPRICE,
			a.FZUCPRICE,
			a.MPRICE,
			a.STOCKNUM,
			a.STOCKUPNUM,
			a.STOCKDOWNNUM,		
			
			b.SUPPLIERNAME,
			c.NAME UNITNAME,
			d.NAME FZUNITNAME
		from 
		<include refid="tableName"></include> a
		left join base_supplier b
		on a.SUPPLIER_ID = b.SUPPLIER_ID
		left join cp_spunit c
		on a.CUNIT_ID = c.SPUNIT_ID
		left join cp_spunit d
		on a.FZUNIT_ID = d.SPUNIT_ID
		
		where 
			a.GOODCODE = #{GOODCODE}
			and a.PK_SOBOOKS = #{pd.PK_SOBOOKS}
			and IFNULL(a.dr,0)=0 
		order by a.STOCKNUM desc
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			GOOD_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 商品入库，增加库存 -->
	<update id="editZCOUNT" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			STOCKNUM = STOCKNUM + #{INCOUNT}
		where 
			GOOD_ID = #{GOOD_ID}
			and a.PK_SOBOOKS = #{pd.PK_SOBOOKS}
			and IFNULL(dr,0)=0 
	</update>
	
	
	<select id="findByUnitName" parameterType="pd" resultType="String">
			select SPUNIT_ID from cp_spunit 
			where name=#{name}
	</select>
	
	<insert id="saveUnit" parameterType="pd">
		insert into
		 cp_spunit (SPUNIT_ID,NAME) 
		 VALUES (#{Id},#{name})
	</insert>
	
	<select id="findByCode" parameterType="pd" resultType="pd">
		select 
			GOODCODE,GOODNAME
		 from 
		<include refid="tableName"></include>
		where 
			GOODCODE = #{GOODCODE}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0 
	</select>
	
	
	<select id="findPKBYName" parameterType="pd" resultType="String">
		select SOBOOKS_ID 
		from base_sobooks
		where ENTERPRISENAME=#{PK_NAME}
	</select>
	
	
	<select id="findDefAndNumByCode" parameterType="HashMap" resultType="pd">
		select STOCKNUM,DEF1
		from base_good
		where 
			GOODCODE=#{GOODCODE}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0 
	</select>
	
	<update id="updateDEF1ByCode" parameterType="map">
		update base_good
		set DEF1 = #{price}
		where GOODCODE=#{GOODCODE}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0 
	</update>
	
	<update id="savePic" parameterType="pd">
		update base_good
		set GOODPIC = #{PATH}
		where GOOD_ID=#{MASTER_ID}
		and IFNULL(dr,0)=0 
	</update>
	
	<select id="findbyTypeId" parameterType="pd" resultType="String">
		select max(GOODCODE)
		from base_good
		where 	GOODTYPE_ID=#{GOODTYPE_ID}
			and PK_SOBOOKS = #{PK_SOBOOKS}
			and IFNULL(dr,0)=0 
	</select>
	
	<select id="datalistPageByAllInorderSale" parameterType="page" resultType="pd">
		 select * from (
		 select  substring(b.BILLCODE,1,1) as bill, b.BILLCODE,d.GOODNAME,d.GOODCODE ,a.UNITPRICE_ID,a.PNUMBER,a.LASTTIME,c.USERNAME,b.BILLTYPE,d.STOCKNUM
		from psi_inorder_body as a 
		left join  psi_inorder as b on  a.INORDER_ID=b.INORDER_ID
		left join sys_user as c on b.USER_ID=c.USER_ID
		left join  base_good as d on a.GOODCODE_ID=d.GOODCODE
		where a.PK_SOBOOKS=#{pd.PK_SOBOOKS}
		and ifnull(a.dr,0)=0
		and  d.GOODCODE = #{pd.GOODCODE}
		and b.BILLSTATUS=2
		union 
		
		select  substring(b.BILLCODE,1,1) as bill, b.BILLCODE,d.GOODNAME,d.GOODCODE ,a.UNITPRICE_ID,a.PNUMBER,a.LASTTIME,c.USERNAME,b.BILLTYPE,d.STOCKNUM
		from psi_salebillbody as a 
		left join  psi_salebill as b on  a.SALEBILL_ID=b.SALEBILL_ID
		left join sys_user as c on b.USER_ID=c.USER_ID
		left join  base_good as d on a.GOODCODE_ID=d.GOODCODE
		where a.PK_SOBOOKS=#{pd.PK_SOBOOKS}
		and ifnull(a.dr,0)=0
		and b.BILLSTATUS=2
		and  d.GOODCODE = #{pd.GOODCODE}
		) as aa 
		ORDER BY LASTTIME desc 
	</select>
	
</mapper>